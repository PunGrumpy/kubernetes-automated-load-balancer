replicaCount: 2

image:
  repository: pungrumpy/kalb
  tag: ad1ab8c60df8d3d050df1224301ba33acfb84ded
  pullPolicy: IfNotPresent

nameOverride: 'k8s-auto-loadbalancer'
fullnameOverride: 'k8s-auto-loadbalancer'

serviceAccount:
  create: true
  annotations: {}
  name: ''

podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/port: '3000'
  prometheus.io/path: '/api/metrics'

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

secrets:
  secretName: webapp-secret

resources:
  limits:
    cpu: 500m
    memory: 768Mi
  requests:
    cpu: 200m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 1
          periodSeconds: 15

nodeSelector: {}

tolerations: []

affinity: {}

configMap:
  data: {}

rollingUpdate:
  maxSurge: 1
  maxUnavailable: 0

progressDeadlineSeconds: 600

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 3
  failureThreshold: 3

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  failureThreshold: 3

ingressRoute:
  enabled: true
  name: k8s-auto-loadbalancer
  entryPoints:
    - websecure
  routes:
    - match: Host(`pungrumpy.xyz`)
      kind: Rule
      priority: 10
      services:
        - name: k8s-auto-loadbalancer
          port: 80
      middlewares:
        - prefix-strip
        - health-check
        - rate-limit
        - retry
  tls:
    certResolver: cloudflare

middlewares:
  - name: prefix-strip
    spec:
      stripPrefix:
        prefixes:
          - /api/metrics
  - name: health-check
    spec:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: https
  - name: rate-limit
    spec:
      rateLimit:
        average: 100
        burst: 50
  - name: retry
    spec:
      retry:
        attempts: 3
        initialInterval: 100ms

podDisruptionBudget:
  enabled: true
  minAvailable: 1

resourceQuota:
  enabled: true
  hard:
    requests.cpu: '1'
    limits.cpu: '2'
    requests.memory: 2Gi
    limits.memory: 4Gi

limitRange:
  enabled: true
  defaultLimit:
    cpu: 500m
    memory: 512Mi
  defaultRequest:
    cpu: 100m
    memory: 256Mi
