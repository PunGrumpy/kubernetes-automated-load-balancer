replicaCount: 2

image:
  repository: nginx
  tag: stable
  pullPolicy: IfNotPresent

nameOverride: 'k8s-auto-loadbalancer'
fullnameOverride: 'k8s-auto-loadbalancer'

serviceAccount:
  create: true
  annotations: {}
  name: ''

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configMap:
  data: {}

rollingUpdate:
  maxSurge: 25%
  maxUnavailable: 25%

readinessProbe:
  httpGet:
    path: /healthz
    port: 80
  initialDelaySeconds: 10
  periodSeconds: 5
livenessProbe:
  httpGet:
    path: /healthz
    port: 80
  initialDelaySeconds: 15
  periodSeconds: 10

# Ingress routing with Traefik
ingressRoute:
  enabled: true
  name: k8s-auto-loadbalancer
  entryPoints:
    - websecure
  routes:
    - match: Host(`pungrumpy.xyz`)
      kind: Rule
      priority: 10
      services:
        - name: k8s-auto-loadbalancer
          port: 80
  tls:
    certResolver: cloudflare
