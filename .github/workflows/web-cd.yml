name: 🚀 Web Application CD

on:
  push:
    branches:
      - main
    paths:
      - 'webapp/**'
  pull_request:
    branches:
      - main
    paths:
      - 'webapp/**'

# Cancel in-progress runs for pull requests when developers push additional
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  cypress-test:
    name: 🧪 Cypress Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      - name: 🧑‍🔬 Cypress Run
        uses: cypress-io/github-action@v6
        with:
          start: pnpm run start
          wait-on: 'http://localhost:3000'
          record: true
          parallel: true
          env: |
            CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    name: ⚒️ Build and Push Docker Image
    needs: cypress-test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 🚪 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: 🏷️ Get Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: pungrumpy/kalb
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            ${{ github.sha }}
            latest
      - name: 🏗️ Build and Push
        uses: docker/build-push-action@v6
        with:
          context: webapp
          file: webapp/Dockerfile
          secrets: |
            UPSTASH_REDIS_REST_URL=${{ secrets.UPSTASH_REDIS_REST_URL }}
            UPSTASH_REDIS_REST_TOKEN=${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
          sbom: ${{ github.event_name != 'pull_request' }}
          provenance: ${{ github.event_name != 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 🐳 Scout Scan
        uses: docker/scout-action@v1
        if: ${{ github.event_name == 'pull_request' }}
        with:
          to-env: production
          command: cves,recommendations,compare,environment
          image: ${{ steps.meta.outputs.tags }}
          to: pungrumpy/kalb:latest
          ignore-unchanged: true
          only-severities: critical,high
          github-token: ${{ secrets.GITHUB_TOKEN }}
          organization: 'pungrumpy'

  update-helm:
    name: 🎩 Update Helm Chart
    needs: build-and-push
    if: ${{ needs.build-and-push.result == 'success' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      - name: 👷‍♂️ Setting git config
        run: |
          git config --local user.name 'GitHub Actions'
          git config --local user.email 'actions@github.com'
      - name: 📥 Fetch and Pull latest changes
        run: |
          git fetch origin main
          git pull origin main
      - name: 🚀 Update Helm Chart
        run: |
          sed -i "s/^    tag: .*/    tag: ${{ github.sha }}/" helm/values.yaml
      - name: 📤 Commit and Push
        run: |
          git add helm/values.yaml
          git commit -m "chore(helm): update image tag to ${{ github.sha }}"
          git push
